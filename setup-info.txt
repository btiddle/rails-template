===========================================================
Initial Setup 
===========================================================

# To generate app using template file 
#   -m, [--template=TEMPLATE]  # Path to application template
#   -T, [--skip-test-unit]     # Skip Test::Unit files
  cd ~/workspace
  rails new <app-name-here> -T -m <template-file-name-here>

# Generate a new sample app 
  cd ~/workspace
  rails new <app-name-here>
  cd <app-name-here>
# For Ruby on Rails Trutorial 3rd Edition while running 
  rails _4.0.8_  new <app-name-here>

# To install gem files
# Rename Gemfile to Gemfile.ORIGINAL
  mv Gemfile Gemfile.ORIGINAL
# Copy desired Gemfile from github
  copy https://github.com/btiddle/rails-template<desired-gemfile>  Gemfile
# Run bundle 
  bundle install --without production
# In case you've previously installed a version of a gem (such as 
# Rails itself) other than the one specified by the Gemfile, it's a 
# good idea to update the gems with bundle update to make sure the 
# versions match.
  bundle update
# List installed gem files
  gem query --local

# To install packages
  rails generate foundation:install
  rails generate rails_footnotes:install
  bundle exec guard init  # to get it initially
  # rails generate rspec:install

# Update readme and rename from README.rdoc to README.md
  edit README.rdoc
  git mv README.rdoc README.md
  # SKIP: git commit -am "Improve the README"

# Edit config/environments/production.rb
  config.assets.compile = true

# To add additional files to ignore
  Added following to .gitingnore
  # Ignore other unneeded files.
  database.yml
  doc/
  *.swp
  *~
  .project
  .DS_Store
  .idea
  .secret

===========================================================
Git, Github and Heroku
===========================================================

# To initialize local machine repository and commit files
# Edit .gitignore and add lines
  TODO: Learn how to make production work when this is done. Skip for now.
  config/database.yml
  config/secrets.yml
# Initialize local machine repository
  git init
  git add -A
  git commit -m "Initialize repository"
# To review the status of the repository
  git stats
# To restore local image to look like repository image
  git checkout -f
# To create a branch and switch to it
  git checkout -b <branch-name>
# To list branches and identify current active branch
  git branch
# To merge branch into master
  git checkout master
  git merge <branch-name>
# To delete a branch
  git branch -d <branch-name>
# To fix check-in message of last commit
  git commit --amend -m "Initialize repository"
  git push -f
# To add and comment
  git commit -a -m "Update Gemfile.lock for Heroku"

# To copy local repository to github
  Create repository at https://github.com/
  git remote add origin https://github.com/btiddle/<epositiry-name>.git
  git push -u origin <branch-name>   # Usually master 
  # rort suggests: git push -u origin --all

# To deploy app to Heroku
# Initial creation
  heroku login
  heroku create <app-name>       # give a name; if blank one will be assigned
  git push heroku master         # note the URL produced (i.e. http://intense-plains-5236.herokuapp.com)
# Whenever db is created or updated will need to rake
  heroku run rake db:migrate
# Whenever tests are updated, will need to rake test
  bundle exec rake test
# To deploy subsequent incremental updates to Heroku
  git push heroku
# To access application
  URL           # In browser
  heroku open   # At command line 
# To check Heroku production log 
  heroku logs
# To trail Heroku production logs
  heroku logs -t
# To access console
  heroku run console
  Note.new
  exit
  And play with app's functionality
# To rename application
  heroku rename <new-application-name>
# To display Heroku online dashboard
  www.heroku.com

===========================================================
Models, Controllers and Scaffolds
===========================================================

# To run Rails server on local machine
  cd to dir with app
  rails server
# To stop server
  <Ctrl>-C

# To load application in browser
  http://localhost:3000

# To create and configure models
# Generate models (an example)
  rails generate model Blog name:string description:text
  rails generate model Post title:string content:text blog:references
  rails generate model Message author:string message:text post:references
# Add verifications and associations to models
  Edit model files in app/models/
# Create and migrate db
  rake db:migrate
  # rort suggests: bundle exec rake db:migrate
# To see list of other rake commands
  bundle exec rake -T db  # just db
  bundle exec rake -T     # all
# To remove a model
  rails destroy model <model-name>
# To undo a single migration step
  bundle exec rake db:rollback
# To undo all migration steps
  bundle exec rake db:migrate VERSION=0

# To access db
  rails console 
# To load test environment in console (default is dev env)
  rails console test
  Hirb.enable
  Blog.column_names   # list column names
  Blog.new            # create new object and display as table
  Blog.all            # display all records
  ActiveRecord::Base.connection.tables
                      # list all tables
  ActiveRecord::Base.connection.execute("select * from blogs")
                      # lists all field names and their values
  ActiveRecord::Base.connection.execute("SELECT * FROM sqlite_master")
                      # lists create statements for all tables
  ActiveRecord::Base.connection.execute ("SELECT sql FROM sqlite_master WHERE name = 'blogs'") 
                      # lists create statement for individual table

# Afer each rake db:migrate, restart server or use reload! in console
  reload!

# To create controller with default RESTful Routing (an example)
# Controller and views are simultaneously created
  rails g controller User index new create show edit update destroy result
# To remove a controller
  rails destroy controller User index new create show edit update destroy result

# To create scaffold
# Models, controller and views are simultaneously created
  rails generate scaffold Post name:string title:string context:text

# To configure root route and resources
  edit config/routes.rb (an example)
    resources :surveys
    get "/result" => 'surveys#result'
    root 'surveys#new'
  rake routes
  rort suggests: bundle exec rake db:migrate

===========================================================
Tests
===========================================================

# To run the tests
  bundle exec rake test

# To use Guard to run tests
  bundle exec guard       # must be installed and configured first
# To run all the tests, hit return at the guard> prompt
# To exit Guard, press Ctrl-D. 

# To get all the routes
  rake routes
  helpers = Rails.application.routes.named_routes.helpers
  http://localhost:3000/rails/routes (via Sextant gem)
  wget --spider -r -nv -nd -np http://localhost:3209/ 2>&1 | ack -o '(?<=URL:)\S+'

===========================================================
Coding
===========================================================
# Assign a value to a variable
  <% provide(:title, "Home") %>
# Print variable value
  <%= yield(:title) %>
# Inserts contents of each page into the layout
  <%= yield %>
# Using test setup method and string interpolation
  def setup
    @base_title = "Ruby on Rails Tutorial Sample App"
  end
  ...
  assert_select "title", "#{@base_title} | Home"


